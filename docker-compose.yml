version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
    networks:
      - frontend-network
    restart: unless-stopped

  frontend:
    build: .
    image: frontend_node
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - frontend-network
      - backend-network
    restart: unless-stopped

  db:
    image: mysql:8.4
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${DB_ROOT_PASSWORD}"]
      timeout: 30s
      retries: 10
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d 
    networks:
      - backend-network
    restart: unless-stopped

networks:
  frontend-network:
  backend-network:
    internal: true

volumes:
  mysql-data: