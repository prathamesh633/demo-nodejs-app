version: '3.8'
services:
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL certificates
    depends_on:
      - frontend
    networks:
      - frontend-network
    restart: unless-stopped

  frontend:
    build: . 
    image: frontend_node
    container_name: node_frontend
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=rootpass
      - DB_NAME=mydb
    networks:
      - frontend-network
      - backend-network
    # Make sure your frontend app uses mysql2/native password connector

  db:
    image: mysql:8.4
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: mydb
      # Add these environment variables for better compatibility
      MYSQL_ROOT_HOST: '%'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpass"]
      timeout: 30s
      retries: 10
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend-network
    # Remove the problematic command line

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge
    internal: true

volumes:
  mysql-data: